name: 🤖 AI-Native Guru CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20, 22]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build project
      run: npm run build
      
    - name: 🧪 Run basic tests
      run: npm run test:basic
      
    - name: 🚀 Run AI-native suite
      run: npm run test:ai-native
      
    - name: 📊 Run validation tests
      run: npm run test:validation
      
    - name: 🔥 Run stress tests
      run: npm run test:stress
      
    - name: 🎯 Generate test report
      run: npm run test:coverage
      if: matrix.node-version == '20'
      
    - name: 📈 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🎨 Run Prettier
      run: npm run format:check
      
    - name: 🔍 Run ESLint
      run: npm run lint
      
    - name: 🏗️ Type check
      run: npm run type-check

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔒 Run npm audit
      run: npm audit --audit-level moderate
      
    - name: 🛡️ Run CodeQL security scan
      uses: github/codeql-action/init@v2
      if: github.event_name == 'push'
      with:
        languages: javascript

  performance:
    name: ⚡ Performance Testing
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build project
      run: npm run build
      
    - name: ⚡ Run performance benchmarks
      run: npm run test:performance
      
    - name: 📊 Generate performance report
      run: npm run benchmark:report

  publish:
    name: 📦 Publish Package
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build project
      run: npm run build
      
    - name: 🚀 Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      if: ${{ !contains(github.event.head_commit.message, 'skip publish') }}

  e2e:
    name: 🎭 End-to-End Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build project
      run: npm run build
      
    - name: 🎭 Run E2E tests
      run: npm run test:e2e
      
    - name: 📸 Upload test artifacts
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: e2e-artifacts
        path: test-results/

  ai-compatibility:
    name: 🤖 AI Compatibility Testing
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build project
      run: npm run build
      
    - name: 🤖 Test AI-native output format
      run: npm run test:ai-compatibility
      
    - name: 📊 Validate AI consumption patterns
      run: npm run validate:ai-output
